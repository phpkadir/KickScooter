// #INDEX# ======================================================================================================
// Title .........: Управление BLDC двигателем
// Arch ..........: GD32F130C8C6
// Author ........: GreenBytes ( https://vk.com/greenbytes ), Florian flo199213 ( https://github.com/flo199213/Hoverboard-Firmware-Hack-Gen2/tree/master/HoverBoardGigaDevice )
// Version .......: 1.0.0.0
// ==============================================================================================================

#ifndef BLDC_H
	
	#define BLDC_H
	
	// Подключение библиотек
	// Подключение основной библиотеки работы с микроконтроллером
	#include "gd32f1x0.h"
	
	// Подключение фреймворка
	#include "../framework/framework.h"
	// Подключение констант и макросов
	#include "../define.h"
	
	// Константы
	// Режим работы двигателя
	// Двигатель отключен
	# define BLDC_OFF								0
	// Тип сигнала Меандр
	# define BLDC_MEANDER						1
	// Треугольный тип сигнала
	# define BLDC_TRIANGULAR				2
	// Пилообразный тип сигнала
	# define BLDC_SAW								3
	// Синусный тип сигнала
	# define BLDC_SINUS							BLDC_TRIANGULAR
	
	// #BLDC# ------------------------------------------------------
	// Description....: Управление режимом двигателя
	// Argument.......: 
	//      uint8_t setMode							= Флаг режима управления двигателем (см. ф. bldc.h)
	//					BLDC_OFF								= Двигатель отключен
	//					BLDC_MEANDER						= Тип сигнала Меандр
	//					BLDC_TRIANGULAR					= Треугольный тип сигнала 
	//					BLDC_SAW								= Пилообразный тип сигнала 
	//					BLDC_SINUS							= Синусный тип сигнала*
	//
	//		*Синусный тип сигнала достигается за счет изменением уровня скважности за цикл прохождения фазы
	// ------------------------------------------------------------
	void engineMode(FlagStatus setMode);
	
	// #BLDC# ------------------------------------------------------
	// Description....: Задание скажности двигателя
	// Argument.......: 
	//      int16_t setPwm							= Уровень скважности от -1000 до 1000
	// ------------------------------------------------------------
	void engineWrite(int16_t setPwm);
	
	// #BLDC# ------------------------------------------------------
	// Description....: Расчет и установка ШИМ сигнала на фазы
	// Argument.......: Нет
	// ------------------------------------------------------------
	void enginePWM(void);
	
#endif
